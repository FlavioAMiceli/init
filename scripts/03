#!/bin/bash

ADD=0

usage() {
	echo -e "Usage: $0 [-a] file\n\t-a, add new entries to specified file." >&2
}

get_possible_values() {
	OPTS=($(awk -F, '{print $1}' $1 | tr ';' '\n' | sort | uniq))
	for OPT in ${OPTS[@]}; do
		echo "${OPT}"
	done
}

get_user_choices() {
	CHOICES=$(cat $1)
	for ((i = 1; i < 9; i++)); do
		OPTS=($(echo "$CHOICES" | get_possible_values))
		if ((${#OPTS[@]} > 1)); then
			select OPT in ${OPTS[@]}; do
				CHOICE=${OPT}
				break
			done
			CHOICES=$(echo "$CHOICES" | awk -v re=${CHOICE} '($1 ~ re) {print $0}' | cut -d',' -f 2-)
		else
			CHOICES=$(echo "$CHOICES" | cut -d',' -f 2-)
		fi
	done
	echo "$CHOICES"
}

get_random_line() {
	CHOICES=$(cat $1)
	let LEN=$(echo "$CHOICES" | wc -l | awk '{print $1}')
	let "N=$((RANDOM%=$LEN)) + 1"
	echo "$CHOICES" | sed "${N}q;d"
}

if [[ -z $1 ]]; then
	usage
	exit 1
elif [[ -f "$1" ]]; then
	INPUT_FILE=$1
fi
while getopts ":a:" OPT; do
	case ${OPT} in
		a )
			ADD=1
			INPUT_FILE=${OPTARG}
			if [ -z "${INPUT_FILE}" ]; then
				echo "Invalid option: -${OPT} requires a filename or non-emtpy string as argument." >&2
				exit 1
			fi
			;;
		: )
			echo "Invalid option: -${OPTARG} requires an argument" >&2
			exit 1
			;;
		\? )
			usage
			exit 1
			;;
	esac
done

if [[  $ADD -eq 0 ]]; then
	CHOICES=$(get_user_choices $INPUT_FILE)
	CHOICE=$(echo "$CHOICES" | get_random_line)
	echo "$CHOICE" | awk -F, '{print $1}'
	open -a Firefox $(echo "$CHOICE" | awk -F, '{print $2}')
else
	echo "When multiple values make sense in a category, separate them using the semi-colon, [;]."
	CHOICES=$(cat $INPUT_FILE)
	NEW_ENTRY=""
	for ((i = 1; i < 9; i++)); do
		OPTS=($(echo "$CHOICES" | get_possible_values))
		if ((${#OPTS[@]} > 0)); then
			echo -e "Suggestions for this category are:\n"
			for OPT in ${OPTS[@]}; do
				echo "$OPT"
			done
		fi
		read VALUES
		NEW_ENTRY+="$(echo "$VALUES" | tr ' ' '-'),"
		CHOICES=$(echo "$CHOICES" | cut -d',' -f 2-)
	done
	echo "What is the name of this artist?"
	read VALUES
	NEW_ENTRY+="$VALUES - "
	echo "What is this album/song called?"
	read VALUES
	NEW_ENTRY+="$VALUES"
	echo "$NEW_ENTRY" | tr '\n' ',' >> $INPUT_FILE
	echo "What is the URL?"
	read VALUES
	echo "$VALUES" >> $INPUT_FILE
fi

exit 0
